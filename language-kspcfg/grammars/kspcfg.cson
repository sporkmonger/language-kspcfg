'name': 'KSP Config'
'scopeName': 'source.kspcfg'
'fileTypes': [
  'cfg'
]
'patterns': [
  {
    'captures':
      '1':
        'name': 'keyword.operator.node.source.kspcfg'
      '2':
        'name': 'keyword.control.node.source.kspcfg'
      '4':
        'name': 'variable.other.namewithwildcards.node.source.kspcfg'
      '6':
        'name': 'keyword.selector.node.source.kspcfg'
      '8':
        'name': 'meta.selector.expression.source.kspcfg'
    'match': '^\\s*([\\-\\*\\!\\+\\$\\%\\@])?(\\w+)(\\[([_\\w\\?\\*]+)\\])?(:(HAS|FOR|NEEDS|BEFORE|AFTER|FINAL|Final)(\\[(.*)\\])?)*'
    'name': 'meta.node.kspcfg'
  }
  {
    'captures':
      '1':
        'name': 'keyword.operator.modifier.attribute.source.kspcfg'
      '2':
        'name': 'variable.other.readwrite.attribute.source.kspcfg'
      '3':
        'name': 'keyword.operator.replacement.source.kspcfg'
      '4':
        'name': 'string.other.kspcfg'
    'match': '^\\s*([\\-\\*\\!\\+\\$\\%\\@])?(\\b[a-zA-Z_]*\\b)\\s*([\\+\\*\\!\\^]*=)\\s*(.*)$'
    'name': 'meta.attribute.kspcfg'
  }
  {
    'begin': '//'
    'captures':
      '1':
        'name': 'punctuation.definition.comment.source.kspcfg'
    'end': '$\\n?'
    'name': 'comment.line.double-slash.source.kspcfg'
  }
]
# 'repository':
#   'expression'
